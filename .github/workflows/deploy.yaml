name: build and deploy
on:
  push:
    paths-ignore:
      - 'README.md'   
    branches:
      - main
  pull_request:
    paths-ignore:
      - 'README.md'   
    branches:
      - main
permissions:
  id-token: write
  contents: read 
env: 
  AWS_REGION: "us-east-1"
  TOKEN: ${{ secrets.TOKEN }}
  APPLICATION_ID: ${{ secrets.APPLICATION_ID }}
  TF_VAR_aws_account_id: ${{ secrets.AWS_ACCOUNT_NUMBER }}

jobs:
  build: 
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_NUMBER }}:role/${{ secrets.AWS_DEPLOY_ROLE }}
          role-session-name: exercise-tracker-deploy
          aws-region: ${{ env.AWS_REGION }}
      - name: pnpm setup
        uses: pnpm/action-setup@v4
      - name: node setup
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache:             pnpm
      - name: install
        run: pnpm install
    #   - name: types
    #     run:  pnpm run types
    #   - name: lint
    #     run:  pnpm run lint
      - name: build
        run: pnpm run build
      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: lambda-zips
          path: terraform/*.zip
  terraform-plan:
    runs-on: ubuntu-latest
    container: hashicorp/terraform:1.9.3 
    steps:
      - name: checkout code
        uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_NUMBER }}:role/${{ secrets.AWS_DEPLOY_ROLE }}
          role-session-name: exercise-tracker-deploy
          aws-region: ${{ env.AWS_REGION }}
      - name: download artifacts
        uses: actions/download-artifact@v3
        with:
          name: lambda-zips
          path: terraform
      - name: terraform plan
        run: |
          cd terraform
          terraform init
          terraform plan -out tfplan
#   terraform-apply:
#     if: github.event_name == 'push'
#     needs: terraform-plan
#     runs-on: ubuntu-latest
#     container: hashicorp/terraform:1.9.3 
#     steps:
#       - name: checkout code
#         uses: actions/checkout@v3
#       - name: configure aws credentials
#         uses: aws-actions/configure-aws-credentials@v3
#         with:
#           role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_NUMBER }}:role/${{ secrets.AWS_DEPLOY_ROLE }}
#           role-session-name: exercise-tracker-deploy
#           aws-region: ${{ env.AWS_REGION }}
#       - name: terraform plan
#         run: |
#           cd terraform
#           terraform init
#           terraform plan -out tfplan
#       - name: terraform apply
#         run: |
#           cd terraform
#           terraform init
#           terraform apply tfplan